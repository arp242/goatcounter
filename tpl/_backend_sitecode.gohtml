{{define "code"}}&lt;script async 
	data-goatcounter="{{.Site.URL}}/count"
	src="//static.goatcounter.localhost:8081/count.js"&gt;&lt;/script&gt;{{end}}
<pre>{{template "code" .}}</pre>

{{if eq .Path "/settings"}}

<h3>Content security policy</h3>
<p>You’ll need the following if you use a
<code>Content-Security-Policy</code>:</p>

<pre>
script-src  https://{{.Static}}
img-src     {{.Site.URL}}/count
</pre>

<h3>Customizing</h3>
<p>You can pass variables with the <code>window.goatcounter.vars</code> object.

The default value will be used if the value is <code>null</code> or
<code>undefined</code>, but <em>not</em> on empty string, <code>0</code>, or
anything else!</p>

<p>The value can be used as a callback: the default value is passed and the
return value is sent to the server. Nothing is sent if the return value from the
<code>path</code> callback is <code>null</code>.</p>

<p>Data:</p>

<ul>
	<li><code>path</code> – Page that’s recorded, without domain (e.g.
		<code>/path/page.html</code>).</li>

	<li><code>title</code> – Page title. The UI will always display the latest
		title used. Default is <code>document.title</code>.</li>

	<li><code>event</code> – Treat the <code>path</code> as an event, rather
		than a URL. Boolean.</li>

	<li><code>referrer</code> – Where the user came from; can be an URL
		(<code>https://example.com</code>) or any string
		(<code>June Newsletter</code>). Default is to use the
		<code>Referer</code> header.</li>
</ul>

<p>Settings:</p>
<ul>
	<li><code>no_onload</code> – Don’t do anything on page load; if you want to
		call <code>count()</code> manually.</li>
</ul>

<p>Callable methods:</p>
<ul>
	<li><code>window.goatcounter.count(vars)</code> – Count an event. The
		<code>vars</code> parameter is an object as described above, and wil
		take precedence over the global <code>window.goatcounter.vars</code>.</li>
</ul>

<h3 id="examples">Examples</h3>

<h4 id="example-prod">Load only on production</h4>
<p>You can check <code>location.host</code> if you want to load GoatCounter only
on <code>production.com</code> and not <code>staging.com</code> or
<code>development.com</code>; for example:</p>

<pre>&lt;script&gt;
	// Only load on production environment.
	if (window.location.host !== 'production.com')
		window.goatcounter.no_onload = true;
&lt;/script&gt;
{{template "code" .}}</pre>

<p>Note that <a href="https://github.com/zgoat/goatcounter/blob/9525be9/public/count.js#L69-L72">
	request from localhost are already ignored</a>.</p>

<h4 id="example-path">Custom path and referrer</h4>
<pre>&lt;script&gt;
	window.goatcounter = window.goatcounter || {};
	window.goatcounter.vars = {
		path: function(p) {
			// Don't track the home page.
			if (p === '/')
				return null;

			// Remove .html from all other page links.
			return p.replace(/\.html$/, '');
		},

		// Very simplistic method to get referrer from URL (e.g. ?ref=Newsletter)
		referrer: (window.location.search ? window.location.search.split('=')[1] : null),
	};
&lt;/script&gt;
{{template "code" .}}</pre>

<h4 id="example-query">Ignore query parameters in path</h4>
<p>The value of <code>&lt;link rel="canonical"&gt;</code> will be used
automatically, and is the easiest way to ignore extraneous query parameters:</p>

<pre>&lt;link rel="canonical" href="https://example.com/path.html"&gt;</pre>

<p>The <code>href</code> can also be relative (e.g. <code>/path.html</code>. Be
sure to understand the potential SEO effects before adding a canonical URL! If
you use query parameters for navigation then you probably <em>don’t</em> want
it.</p>

<p>Alternatively you can send a custom <code>path</code> without the query
parameters:</p>

<pre>&lt;script&gt;
	window.goatcounter = window.goatcounter || {};
	window.goatcounter.vars = {
		path: location.pathname || '/',
	};
&lt;/script&gt;
{{template "code" .}}</pre>

<h4 id="example-spa">SPA</h4>
<p>Custom <code>count()</code> example for hooking in to an SPA:</p>
<pre>&lt;script&gt;
	window.goatcounter = window.goatcounter || {};
	window.goatcounter.vars = {no_onload: true}

	window.addEventListener('hashchange', function(e) {
		window.goatcounter.count({
			page: location.pathname + location.search + location.hash,
		});
	});
&lt;/script&gt;
{{template "code" .}}</pre>


<h3>Advanced usage</h3>
<p>You don’t <em>need</em> to use the <code>count.js</code> script, you can also
<code>GET {{.Site.URL}}/count</code> directly – e.g. from your app's middleware
– with the following query parameters:</p>

<ul>
	<li><code>p</code> – <code>path</code></li>
	<li><code>t</code> – <code>title</code></li>
	<li><code>d</code> – <code>domain</code></li>
	<li><code>r</code> – <code>referrer</code></li>
</ul>

<p>The <code>User-Agent</code> header and remote address are used for the
browser and location.</p>

<p>The endpoint returns a small 1×1 GIF image. A simple no-JS way would be to
load an image on your site:<p>
<pre>&lt;img src="{{.Site.URL}}/count?p=/test-img"&gt;</pre>

<p>Note this calling it from the middleware or as will probably result in more
bot requests. GoatCounter does its best to filter this out, but it’s impossible
to do this 100% reliably.</p>


{{end}} {{/* if eq .Path "/settings" */}}
